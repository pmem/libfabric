.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "fi_sharp" "7" "2022\-12\-14" "Libfabric Programmer's Manual" "#VERSION#"
.hy
.SH NAME
.PP
fi_sharp \- The SHARP Fabric Provider
.SH OVERVIEW
.PP
The SHARP provider is a collectives offload provider that can be used on
Linux systems supporting the SHARP protocol.
.SH SUPPORTED FEATURES
.PP
This release contains an initial implementation of the SHARP provider
that offers the following support:
.TP
.B \f[I]Endpoint types\f[]
The provider supports only the \f[I]FI_EP_RDM\f[] endpoint type.
.RS
.RE
.TP
.B \f[I]Endpoint capabilities\f[]
Endpoint supports only the fi_barrier and the fi_allreduce operations.
.RS
.RE
.TP
.B \f[I]Modes\f[]
The provider does not require the use of any mode bits.
.RS
.RE
.TP
.B \f[I]Progress\f[]
The SHARP provider supports \f[I]FI_PROGRESS_MANUAL\f[].
.RS
.RE
.TP
.B \f[I]Address Format\f[]
TBD
.RS
.RE
.PP
\f[I]Msg flags\f[] The provider does not support messaging.
.PP
\f[I]MR registration mode\f[] The provider implements the
FI_MR_VIRT_ADDR memory mode.
.PP
\f[I]Atomic operations\f[] The provider does not support any atomic
operation.
.SH LIMITATIONS
.PP
The SHARP provider has hard\-coded maximums for supported queue sizes
and data transfers.
These values are reflected in the related fabric attribute structures.
.PP
No support for counters.
.SH RUNTIME PARAMETERS
.PP
The SHARP provider checks for the following environment variables:
.TP
.B \f[I]FI_SHARP_IB_PORT\f[]
Default: 1
.RS
.RE
.SH SEE ALSO
.PP
\f[C]fabric\f[](7), \f[C]fi_provider\f[](7), \f[C]fi_getinfo\f[](3)
.SH AUTHORS
OpenFabrics.
